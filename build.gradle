buildscript {
	ext.kotlin_version = "1.6.10"
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "https://files.minecraftforge.net/maven"
		}
		maven { url "https://jitpack.io" }
		maven { url "https://repo.spongepowered.org/repository/maven-public/" }
		maven {
			url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
		}
	}
	dependencies {
		classpath "com.github.Skytils:ForgeGradle:41dfce0a70"
		classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
		classpath "com.github.debuggingss:MixinGradle:0.6-SNAPSHOT"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}

}

apply plugin: 'kotlin'
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "org.spongepowered.mixin"


version = 1.0


group = "com.nekiak.masterghoster9000"
archivesBaseName = "loader.jar"

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
	version = "1.8.9-11.15.1.2318-1.8.9"
	runDir = "run"
	mappings = "stable_22"
	makeObfSourceJar = false

}


configurations {
	include
	implementation.extendsFrom(include)
}

repositories {
	maven {
		url = "https://repo.sk1er.club/repository/maven-public"
	}
	maven {
		url = "https://jitpack.io/"
	}
	maven {
		url = "https://repo.spongepowered.org/repository/maven-public/"
	}
	maven {
		url = "https://storehouse.okaeri.eu/repository/maven-public/"
	}
	maven {
		url = 'https://repo.polyfrost.cc/releases'
	}
	mavenCentral()
	maven {
		url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
	}
}

dependencies {
	include('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
		setTransitive(false)
	}
	annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")

	include('org.apache.commons:commons-collections4:4.4')

	implementation('org.projectlombok:lombok:1.18.24')
	annotationProcessor('org.projectlombok:lombok:1.18.24')


	include('org.joml:joml:1.10.5')
	// implementation('org.joml:joml:1.10.5')
	//  annotationProcessor('org.joml:joml:1.10.5')

	include 'com.googlecode.json-simple:json-simple:1.1.1'
	include 'org.java-websocket:Java-WebSocket:1.5.3'

}

mixin {
	defaultObfuscationEnv searge

}

jar {
	manifest.attributes(
			"FMLCorePluginContainsFMLMod": "true",
			"ForceLoadAsMod": "true",
			'ModSide': 'CLIENT',
			'TweakOrder': 0,
			'TweakClass': "org.spongepowered.asm.launch.MixinTweaker",
			'FMLCorePlugin': "com.nekiak.loader.CoreLoader",
	)
	enabled = false;
}

sourceJar {
	enabled = false

}

shadowJar {
	archiveClassifier.set("")
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	configurations = [project.configurations.include]

	exclude "LICENSE.md"
	exclude "pack.mcmeta"
	exclude "dummyThing"
	exclude "**/module-info.class"
	exclude "*.so"
	exclude "*.dylib"
	exclude "*.dll"
	exclude "*.jnilib"
	exclude "ibxm/**"
	exclude "com/jcraft/**"
	exclude "org/lwjgl/**"
	exclude "net/java/**"

	exclude "META-INF/proguard/**"
	exclude "META-INF/maven/**"
	exclude "META-INF/versions/**"
	exclude "META-INF/com.android.tools/**"

	exclude "fabric.mod.json"

}

tasks.reobfJar.dependsOn tasks.shadowJar

reobf {
	shadowJar {
		classpath = sourceSets.main.compileClasspath
	}
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	filesMatching("mcmod.info") {
		expand(
				"version": project.version,
				"mcversion": project.minecraft.version
		)
	}
}


processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from(sourceSets.main.resources.srcDirs) {
		include "mcmod.info"
		expand "version": project.version, "mcversion": project.minecraft.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}
}


task fatJar(type: Jar) {

	archiveBaseName = "${"fatjar"}"
	from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}

sourceSets {
	main.java.srcDirs = ["src/main/java", "src/main/kotlin"]
	main.resources.srcDirs = ["src/main/resources"]
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
